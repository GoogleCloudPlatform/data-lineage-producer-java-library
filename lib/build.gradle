// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

plugins {
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'com.github.sherter.google-java-format' version '0.9'
    id 'checkstyle'
    id 'maven-publish'
    id 'signing'
}

googleJavaFormat {
    toolVersion = '1.7'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation platform('com.google.cloud:libraries-bom:26.37.0')
    implementation "com.google.cloud:google-cloud-datalineage"

    implementation "com.google.protobuf:protobuf-java-util:3.23.0"
    implementation 'com.google.api:gax:2.29.0'
    implementation 'com.google.api:gax-grpc:2.29.0'
    implementation 'com.google.api:gax-httpjson:0.103.7'
    implementation 'io.grpc:grpc-protobuf:1.54.1'
    implementation 'com.google.guava:guava:31.1-jre'
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.google.truth:truth:1.1.3'
    testImplementation 'org.mockito:mockito-core:3.+'
    testImplementation 'com.google.api:gax:2.12.2:testlib'
    testImplementation 'com.google.testparameterinjector:test-parameter-injector:1.8'
}

test {
    include '**/*Test.class'
}

shadowJar {
    archiveBaseName.set('data-lineage-producer-java-library')
    relocate 'com.google.protobuf', 'datalineage.shaded.com.google.protobuf'
    relocate 'com.google.guava', 'datalineage.shaded.com.google.guava'
    relocate 'com.google.api', 'datalineage.shaded.com.google.api'
    relocate 'com.google.auth', 'datalineage.shaded.com.google.auth'
    relocate 'io.grpc', 'datalineage.shaded.io.grpc'
    relocate 'com.google.common', 'datalineage.shaded.com.google.common'
    relocate 'com.google.gson', 'datalineage.shaded.com.google.gson'
    relocate 'META-INF/native/libio_grpc_netty_shaded_netty', 'META-INF/native/libdatalineage_shaded_io_grpc_netty_shaded_netty'
    relocate 'META-INF/native/io_grpc_netty_shaded_netty', 'META-INF/native/datalineage_shaded_io_grpc_netty_shaded_netty'
    mergeServiceFiles()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            version = '1.0.0'
            group = 'com.google.cloud.datalineage'
            artifactId = 'producerclient'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Java producer library for Data Lineage.'
                description = 'The library provides Synchronous and Asynchronous clients for interacting with Data Lineage API.'
                url = 'https://github.com/GoogleCloudPlatform/data-lineage-producer-java-library'
                properties = [:]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'midamkina'
                        name = 'Mary Idamkina'
                        email = 'midamkina@google.com'
                    }
                    developer {
                        id = 'gabrysiaolsz'
                        name = 'Gabriela Olszewska'
                        email = 'gabrysiaolsz@google.com'
                    }
                    developer {
                        id = 'ngorchakova'
                        name = 'Natalia Gorchakova'
                        email = 'ngorchakova@google.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/GoogleCloudPlatform/data-lineage-producer-java-library.git'
                    developerConnection = 'scm:git:ssh://git@github.com/GoogleCloudPlatform/data-lineage-producer-java-library.git'
                    url = 'https://github.com/GoogleCloudPlatform/data-lineage-producer-java-library'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://google.oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://google.oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                // TODO: set those with your https://google.oss.sonatype.org OSSRH server user token.
                username = 'secret'
                password = 'secret'
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}